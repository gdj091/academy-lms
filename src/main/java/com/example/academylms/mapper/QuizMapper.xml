<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.academylms.mapper.QuizMapper">

	<!--강의별 퀴즈 리스트-->
	<select id="quizListByLectureId" resultType="map">
		SELECT distinct lw.week_id weekId, lw.week, q.started_at startedAt, q.ended_at endedAt
			,(SELECT join_id FROM quiz_join WHERE week_id=lw.week_id 
			AND enrollment_id=(SELECT enrollment_id 
			FROM lecture_enrollment 
			WHERE student_id=#{studentId} AND lecture_id=#{lectureId})) joinId
		FROM lecture_week lw LEFT JOIN quiz q ON lw.week_id = q.week_id
		WHERE lw.lecture_id=#{lectureId};
	</select>
	
	<!--퀴즈 한문제씩 출력-->
	<select id="quizOne" resultType="map" parameterType="map">
		SELECT (SELECT week FROM lecture_week WHERE week_id=#{weekId}) week, 
			started_at startedAt, ended_at endedAt, type, quiz_no quizNo, question,
			correct_answer correctAnswer, explanation, quiz_id quizId
		FROM quiz WHERE week_id=#{weekId} LIMIT #{page.beginRow},#{page.rowPerPage};
	</select>
	
	<!--(강의,주차)별 퀴즈 전체 문제수-->
	<select id="quizTotalCount">
		SELECT COUNT(*) FROM quiz WHERE week_id=#{weekId}
	</select>
	
	<!--퀴즈(객관식) 보기-->
	<select id="quizOptionList" resultType="com.example.academylms.dto.QuizOption">
		SELECT `option`, option_no optionNo FROM quiz_option WHERE quiz_id=#{quizId}
	</select>
	
	<!--퀴즈 응시중 저장한 답안 확인-->
	<select id="selectAnswer" resultType="string">
		SELECT answer FROM quiz_submission WHERE join_id = #{joinId} AND quiz_no=#{quizId}
	</select>
	
	<!--응시기록 확인-->
	<select id="selectJoinId">
		SELECT join_id FROM quiz_join WHERE week_id=#{weekId} AND enrollment_id=#{enrollmentId}
	</select>
	
	<!--weekId에 해당하는 lectureId-->
	<select id="selectLectureIdByweekId">
		SELECT lecture_id FROM lecture_week WHERE week_id=#{weekId}
	</select>
	
	<!--학생Id와 강의Id에 맞는 enrollmentId-->
	<select id="selectEnrollmentId">
		SELECT enrollment_id FROM lecture_enrollment 
		WHERE student_id=#{studentId} AND lecture_id=#{lectureId}
	</select>
	
	<!--답안을 등록한적 있는지 확인-->
	<select id="findSubmissionId" parameterType="com.example.academylms.dto.QuizSubmission">
		SELECT submission_id submissionId FROM quiz_submission WHERE join_id=#{joinId} AND quiz_no=#{quizNo}
	</select>
	
	<!--퀴즈 문항수-->
	<select id="countQuizByWeekId">
		SELECT COUNT(*) FROM quiz WHERE week_id=#{weekId}
	</select>
	
	<!--답을 맞춘 퀴즈 문항수-->
	<select id="countCorrectQuizByJoinId">
		SELECT COUNT(*) FROM quiz_submission WHERE is_correct = 1 AND join_id= #{joinId}
	</select>
	
	<!--퀴즈 결과-->
	<select id="quizResultByJoinId" resultType="map">
		SELECT qs.quiz_no quizNo,qs.answer, 
				case when qs.is_correct = 1 then 'O' ELSE 'X' END isCorrect,
				qj.score, q.correct_answer correctAnswer
		FROM quiz_submission qs INNER JOIN quiz_join qj ON qs.join_id = qj.join_id
								INNER JOIN quiz q ON q.week_id = qj.week_id AND q.quiz_no = qs.quiz_no
		WHERE qs.join_id=#{joinId}
	</select>
	
	<!--퀴즈 해설-->
	<select id="quizExplanation" resultType="com.example.academylms.dto.Quiz">
		SELECT quiz_no quizNo, question, explanation FROM quiz WHERE week_id = #{weekId}
	</select>
	
	<!--역할 찾기-->
	<select id="selectRoleByUserId" resultType="string">
		SELECT ROLE FROM user WHERE user_id=#{userId}
	</select>
	
	<!--weekId 찾기-->
	<select id="selectWeekId">
		SELECT week_id from lecture_week WHERE lecture_id=#{lectureId} AND week=#{week}
	</select>
	
	<!--동일주차에 동일번호문제가 있는지 확인-->
	<select id="findSameNo">
		SELECT COUNT(*) FROM quiz WHERE week_id=#{weekId} AND quiz_no=#{quizNo}
	</select>
	
	<!--해당강의 몇주차까지 있는지 확인-->
	<select id="selectWeekByLectureId" resultType="com.example.academylms.dto.LectureWeek">
		SELECT week FROM lecture_week WHERE lecture_id=#{lectureId}
	</select>
	
	<!--객관식문제 quidId 확인-->
	<select id="selectQuizIdByWeekIdType">
		SELECT quiz_id FROM quiz WHERE week_id=#{weekId} AND type='객관식'
	</select>
	
	<!--삭제된 문제 뒤에있는 문제들의 quizId-->
	<select id="selectQuizIdByQuizNoWeekId">
		SELECT quiz_id FROM quiz WHERE quiz_no>#{quizNo} AND week_id=#{weekId}
	</select>
	
	<!--강의에 수강중인 전체 학생-->
	<select id="selectQuizStatus" resultType="map">
		SELECT s.student_id studentId, s.name
		FROM lecture_enrollment le INNER JOIN student s ON le.student_id = s.student_id
		WHERE le.lecture_id =#{lectureId}
		ORDER BY s.name
	</select>
	
	<!--퀴즈에 응시한 학생의 정보-->
	<select id="selectSubmissionStudent" resultType="map">
		SELECT s.student_id studentId, s.name, qj.score
		FROM lecture_enrollment le INNER JOIN student s ON le.student_id = s.student_id
		INNER JOIN quiz_join qj ON qj.enrollment_id = le.enrollment_id
		WHERE qj.week_id = #{weekId}
		ORDER BY s.name
	</select>
	
	<!--join_id 등록-->
	<insert id="insertJoinId">
		INSERT INTO quiz_join(week_id, enrollment_id) VALUES(#{weekId},#{enrollmentId});
	</insert>
	
	<!--퀴즈 등록-->
	<insert id="insertQuiz" parameterType="com.example.academylms.dto.QuizForm">
		INSERT INTO quiz(week_id, quiz_no, question, correct_answer, 
						explanation, type, started_at, ended_at)
		VALUES((SELECT week_id from lecture_week WHERE lecture_id=#{lectureId} AND WEEK=#{week}),
		#{quizNo}, #{question}, #{correctAnswer},#{explanation},#{type},#{startedAt},#{endedAt})
	</insert>
	
	<!--퀴즈 보기 등록(객관식)-->
	<insert id="insertQuizOption" parameterType="map">
		INSERT INTO quiz_option(quiz_id, option_no,`option`) 
		VALUES((SELECT quiz_id FROM quiz WHERE week_id=
				(SELECT week_id FROM lecture_week 
				WHERE lecture_id=#{quizForm.lectureId} AND WEEK=#{quizForm.week})
		AND quiz_no=#{quizForm.quizNo}),#{optionNo},#{option})
	</insert>
	
	<!--퀴즈 답안 등록-->
	<insert id="insertQuizAnswer" parameterType="com.example.academylms.dto.QuizSubmission">
		INSERT INTO quiz_submission(join_id,quiz_no,answer) VALUES(#{joinId}, #{quizNo}, #{answer})
	</insert>
	
	<!--퀴즈 답안 수정-->
	<update id="updateQuizAnswer" parameterType="map">
		UPDATE quiz_submission SET answer=#{answer} WHERE submission_id=#{submissionId}
	</update>
	
	<!--퀴즈 정답,오답 체크-->
	<update id="updateIsCorrect">
		UPDATE quiz_submission qs 
					INNER JOIN quiz_join qj ON qs.join_id = qj.join_id
					INNER JOIN quiz q ON qj.week_id = q.week_id AND qs.quiz_no = q.quiz_no
		SET qs.is_correct = CASE WHEN qs.answer = q.correct_answer THEN 1 ELSE 0 END 
		WHERE qs.join_id = #{joinId};
	</update>
	
	<!--퀴즈 점수(정답개수/전체개수*100)-->
	<update id="updateScore">
		UPDATE quiz_join SET score = #{correctQuestion}/#{totalQuestion}*100 
		WHERE join_id=#{joinId}
	</update>
	
	<!--퀴즈 수정-->
	<update id="updateQuiz" parameterType="com.example.academylms.dto.QuizForm">
		UPDATE quiz SET started_at = #{startedAt}, ended_at = #{endedAt}, 
						quiz_no = #{quizNo}, question=#{question}, correct_answer=#{correctAnswer},
						explanation = #{explanation} 
		where week_id=(SELECT week_id from lecture_week WHERE lecture_id=#{lectureId} AND week=#{week}) 
						and quiz_no=#{quizNo}
	</update>
	
	<!--퀴즈 보기 수정(객관식)-->
	<update id="updateQuizOption" parameterType="map">
		UPDATE quiz_option SET `option`= #{option}
		WHERE quiz_id= (SELECT quiz_id FROM quiz WHERE week_id= 
								(SELECT week_id FROM lecture_week 
								WHERE lecture_id=#{quizForm.lectureId} AND week=#{quizForm.week})
						AND quiz_no=#{quizForm.quizNo})
			and option_no = #{optionNo}
	</update>
	
	<!--퀴즈 수정페이지에서 기간수정 시 다른 문제들의 기간도 동일하게 변경-->
	<update id="updateQuizDate" parameterType="com.example.academylms.dto.QuizForm">
		UPDATE quiz SET started_at = #{startedAt}, ended_at = #{endedAt}
		WHERE week_id=(SELECT week_id from lecture_week WHERE lecture_id=#{lectureId} AND week=#{week})
	</update>
	
	<!--삭제된문제 뒤에있는 문제들 번호-1-->
	<update id="updateQuizNo">
		UPDATE quiz SET quiz_no= quiz_no-1 WHERE quiz_id= #{quizId}
	</update>
	
	<!--주차에 해당하는 퀴즈 전체삭제-->
	<delete id="deleteQuiz">
		DELETE FROM quiz WHERE week_id=#{weekId}
	</delete>
	
	<!--퀴즈 전체삭제전에 보기먼저 삭제-->
	<delete id="deleteQuizOption">
		DELETE FROM quiz_option WHERE quiz_id=#{quizId}
	</delete>
	
	<!--퀴즈 한문제 삭제-->
	<delete id="deleteQuizOne">
		DELETE FROM quiz WHERE week_id=#{weekId} AND quiz_no=#{quizNo}
	</delete>
</mapper>