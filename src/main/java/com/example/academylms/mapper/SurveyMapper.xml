<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.academylms.mapper.SurveyMapper">
<select id="getEnrollmentId" resultType="int"  parameterType="int">
SELECT enrollment_id  FROM lecture_enrollment WHERE  student_id = #{studentId}  AND lecture_id = #{lectureId};
</select>

<insert id="addSatisfactionSurvey" parameterType="com.example.academylms.dto.SatisfactionSurvey">
INSERT INTO satisfaction_survey (enrollment_id, rating, comment) VALUES (#{enrollmentId}, #{rating}, #{comment}); 
</insert> 


<select id="checkSurveyParticipation" parameterType="int" resultType="int">
SELECT COUNT(*) FROM satisfaction_survey WHERE enrollment_id = #{enrollmentId};
</select>

<select id="surveyAvgResult" parameterType="int" resultType="double">
SELECT  COALESCE(AVG(sa.rating),0) AS average_rating   FROM lecture_enrollment le INNER JOIN satisfaction_survey sa 
ON le.enrollment_id = sa.enrollment_id WHERE le.lecture_id = #{lectureId};
</select>
 
<select id="countSurveys" parameterType="int" resultType="int">  
SELECT COUNT(*) 
FROM satisfaction_survey ss
JOIN lecture_enrollment le ON ss.enrollment_id = le.enrollment_id
WHERE le.lecture_id = #{lectureId};

</select>

<select id="getSurveyPage" parameterType="map" resultType="com.example.academylms.dto.SatisfactionSurvey">
SELECT ss.rating, ss.comment, ss.create_date AS createDate
FROM satisfaction_survey ss
JOIN lecture_enrollment le ON ss.enrollment_id = le.enrollment_id
WHERE le.lecture_id = #{lectureId}
ORDER BY ss.create_date DESC
LIMIT #{page.rowPerPage} OFFSET #{page.beginRow}
</select>

</mapper>