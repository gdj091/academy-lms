<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.academylms.mapper.LectureMapper">
<select id="findLecturesByInstructor" parameterType="int" resultType="com.example.academylms.dto.Lecture">
    SELECT lecture_id lectureId, title
    FROM lecture
    WHERE instructor_id = #{instructorId}
</select>
<select id="selectLectureById" resultType="com.example.academylms.dto.Lecture" parameterType="int">
    SELECT 
        lecture_id lectureId,
        admin_id adminId,
        instructor_id instructorId,
        title,
        description,
        day,
        time,
        started_at startedAt,
        ended_at endedAt,
        create_date createDate
    FROM lecture
    WHERE lecture_id = #{lectureId}
</select>

<select id="findInstructorInfo"  resultType="com.example.academylms.dto.InstructorInfo">
SELECT u.user_id AS instructorId , i.name as name, i.major AS major FROM user u INNER JOIN instructor i ON u.user_id = i.instructor_id; 
</select>

<select id="findInstructorInfoByinfoId" parameterType="int" resultType="String" >
SELECT i.major AS major FROM user u INNER JOIN instructor i ON u.user_id = i.instructor_id where instructor_id = #{instructorId};
</select>

<insert id="createLecture" parameterType="com.example.academylms.dto.Lecture" useGeneratedKeys="true" keyProperty="lectureId" > 
INSERT INTO lecture  (admin_id, instructor_id, title, DESCRIPTION, DAY, TIME , started_at, ended_at) VALUES (#{adminId},#{instructorId},#{title},#{description},#{day},#{time},#{startedAt},#{endedAt});
</insert>

<insert id="createLectureWeek">
INSERT INTO lecture_week (lecture_id, week) VALUES(#{lectureId},#{week});
</insert>

<select id="lectureOneBylectureId" resultType="com.example.academylms.dto.Lecture" parameterType="int">
SELECT i.major AS major, i.name AS name , l.title AS title, l.DESCRIPTION AS description, l.DAY AS day, l.TIME AS time, l.started_at  AS startedAt, l.ended_at AS endedAt , l.instructor_id AS instructorId, l.lecture_id AS lectureId FROM lecture l
INNER JOIN instructor i ON l.instructor_id = i.instructor_id   WHERE lecture_id = #{lectureId};   
</select>

<delete id="deleteLectureWeek" parameterType="int">
Delete From lecture_week where lecture_id = #{lectureId};
</delete>

<update id="updateLecture" parameterType="com.example.academylms.dto.Lecture">
UPDATE lecture SET admin_id = #{adminId}, instructor_id = #{instructorId}, title = #{title}, DESCRIPTION = #{description}, DAY = #{day},  TIME = #{time},  started_at = #{startedAt}, ended_at = #{endedAt}  WHERE lecture_id = #{lectureId};
</update>

<delete id="deleteLecture" parameterType="int">
Delete From lecture WHERE lecture_id = #{lectureId};

</delete>

</mapper>