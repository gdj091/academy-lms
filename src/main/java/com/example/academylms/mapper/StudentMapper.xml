<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.academylms.mapper.StudentMapper">
	
	<select id="selectStudentsByLecture" parameterType="map" resultType="com.example.academylms.dto.Student">
	    SELECT s.student_id AS studentId,
	           s.name,
	           s.email,
	           s.phone,
	           s.create_date AS createDate
	    FROM student s
	    JOIN lecture_enrollment le ON s.student_id = le.student_id
	    WHERE le.lecture_id = #{lectureId}
	      AND le.status = 1
	      <if test="searchWord != null and searchWord != ''">
	          AND s.name LIKE CONCAT('%', #{searchWord}, '%')
	      </if>
	    ORDER BY s.create_date DESC
	    LIMIT #{beginRow}, #{rowPerPage}
	</select>

	<select id="selectStudentsCountByLecture" parameterType="map" resultType="int">
	    SELECT COUNT(*)
	    FROM student s
	    JOIN lecture_enrollment le ON s.student_id = le.student_id
	    WHERE le.lecture_id = #{lectureId}
	      AND le.status = 1
	      <if test="searchWord != null and searchWord != ''">
	          AND s.name LIKE CONCAT('%', #{searchWord}, '%')
	      </if>
	</select>
	
	<!-- 강사 수강생 조회 -->
	<select id="selectStudentList" resultType="com.example.academylms.dto.Student">
		SELECT student_id AS studentId,
		       name,
		       email,
		       phone,
		       create_date AS createDate
		FROM student
		<where>
			<if test="searchWord != null and searchWord != ''">
				name LIKE CONCAT('%', #{searchWord}, '%')
			</if>
		</where>
		ORDER BY create_date DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 전체 수강생 인원 -->
	<select id="selectStudentCount" resultType="int">
		SELECT COUNT(*) 
		FROM student
		<where>
			<if test="searchWord != null and searchWord != ''">
				name LIKE CONCAT('%', #{searchWord}, '%')
			</if>
		</where>
	</select>
	
	<!-- user.id로 user_id 조회 -->
	<select id="findUserIdByLoginId" parameterType="String" resultType="int">
	    SELECT user_id FROM user WHERE id = #{id}
	</select>
	
	<!-- student 테이블에서 존재하는지 확인 -->
	<select id="findStudentById" resultType="com.example.academylms.dto.Student" parameterType="int">
	    SELECT student_id AS studentId,
	           name,
	           email,
	           phone,
	           create_date AS createDate
	    FROM student
	    WHERE student_id = #{studentId}
	</select>

	<!-- 수강 여부 확인 -->
	<select id="isAlreadyEnrolled" resultType="boolean">
	    SELECT COUNT(*) > 0
	    FROM lecture_enrollment
	    WHERE student_id = #{studentId}
	      AND lecture_id = #{lectureId}
	</select>
	
	<!-- 수강 등록 -->
	<insert id="insertLectureEnrollment">
	    INSERT INTO lecture_enrollment (
	        student_id, lecture_id, status, create_date
	    ) VALUES (
	        #{studentId}, #{lectureId}, 1, NOW()
	    )
	</insert>
	
	<!-- 수강생 정보 수정(관리자) -->
	<update id="updateStudent" parameterType="com.example.academylms.dto.Student">
		UPDATE student
	    SET
	        name = #{name},
	        email = #{email},
	        phone = #{phone}
	    WHERE student_id = #{studentId}
	</update>
	
	<!-- 수강생 정보 삭제(관리자) -->
	<delete id="deleteStudent" parameterType="int">
		DELETE FROM student
    	WHERE student_id = #{studentId}
	</delete>

</mapper>